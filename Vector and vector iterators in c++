11-oct-2022, learning about vectors in c++

// Online C++ compiler to run C++ program online
#include <iostream>
#include <vector>
using namespace std;
int main() {
    vector<int> num1 = {1,2,3,4,5,6}; //Initializer list.
    vector<int> num2 {1,2,3,4,5,6};  // Uniform initialization.
    vector<int> num3(5,12); // here 5 is the size of the vector and 12 is the value inserted.
    for(const int& i: num1){
        cout<<i<<" ";
    }
    cout<<endl;
    for(const int& i: num2){
        cout<<i<<" ";
    }
    cout<<endl;
    for(const int& i: num3){
        cout<<i<<" ";
    }
    return 0;
}
output: 
1 2 3 4 5 6 
1 2 3 4 5 6 
12 12 12 12 12

// Online C++ compiler to run C++ program online
#include <iostream>
#include <vector>
using namespace std;
int main() {
    vector<int> vector3 = {1,2,3,4,5,6,7,8,9};
    cout<<"Initial vector"<<endl;
    for(const int& i : vector3){
        cout<<i<<" ";
    }
    cout<<endl;
    vector3.push_back(20);
    vector3.push_back(30);
    cout<<"Updated vector"<<endl;
    for(const int& i : vector3){
        cout<<i<<" ";
    }
    cout<<endl;
    //Access any element in vector 3
    cout<<"Element at index0: "<<vector3.at(0)<<endl;
    cout<<"Element at index 10: "<<vector3.at(10)<<endl;
    cout<<vector3[10]<<endl; //It can also be //used.
    //However, the at() function is preferred over [] because at() throws an exception whenever the vector is out of bound, while [] gives a garbage value.
    //cout<<vector3[11]<<endl;
    //cout<<vector3.at(11)<<endl;
    //Change Vector Element We can change an element of the vector using the same at() function. For example,
    vector<int> num {1,2,3,4,5};
    for(const int& i : num){
        cout<<i<<" ";
    }
    //changing the element index at 1 and 4
    num.at(1) = 15;
    num.at(4) = 20;
    cout<<"\nUpdated vector"<<endl;
    //pop_back is used to pop out last element from the vector.
    num.pop_back();
    for(const int& i : num){
        cout<<i<<" ";
    }
    num.size();
    cout<<endl;
    
    return 0;
}
output:
Initial vector
1 2 3 4 5 6 7 8 9 
Updated vector
1 2 3 4 5 6 7 8 9 20 30 
Element at index0: 1
Element at index 10: 30
30
1 2 3 4 5 
Updated vector
1 15 3 4 

Functions in vector.

size()	returns the number of elements present in the vector
clear()	removes all the elements of the vector
front()	returns the first element of the vector
back()	returns the last element of the vector
empty()	returns 1 (true) if the vector is empty
capacity()	check the overall size of a vector


